#include <list>
#include <string>
#include <unordered_map>

namespace tool {

  // Basic option defition.
  typedef struct opt_def {
    char type;            // Option type: (s)short/(l)long.
    std::string value;
    std::string keyword;  // The keyword which should be looked up in the
    // message (if) produced when using this option.
  } opt_def;

  class insert_opts {
    std::string line;                   // An individual line in a man-page.
    std::string opt_ident = ".It Fl"; 	// Identifier for an option in man page.
    std::string opt_name;               // Name of the option.
    int opt_pos;                        // Starting index of the (identified) option.
    std::list<opt_def> opt_list;        // List of identified option definitions (opt_def's).
    std::list<opt_def>::iterator opt_list_iter;
    std::unordered_map<std::string, opt_def> opt_map; // Map "option value" to "option definition".
    std::unordered_map<std::string, opt_def>::iterator opt_map_iter;

    public:
    // Insert a list of user-defined option definitions
    // into a hashmap. These specific option definitions
    // are the ones which one can be easily tested.
    insert_opts();

    // For the utility under test, find the valid supported
    // options present in the hashmap generated by insert_opts()
    // and return them in a form of string which can be passed
    // directly to getopt().
    std::string check_opts();
  };
}
